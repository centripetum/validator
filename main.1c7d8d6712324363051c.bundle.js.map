{"version":3,"file":"main.1c7d8d6712324363051c.bundle.js","sources":["webpack:///./src/utilities/combineFailures/index.js"],"sourcesContent":["// @flow\n\nimport {\n  Left,\n  Nothing,\n  equals,\n  groupBy,\n  head,\n  isJust,\n  join,\n  map,\n  maybeToNullable,\n  pipe,\n  prop,\n  reduce,\n  show,\n  sortBy,\n  values\n} from 'sanctuary'\n\nimport flatMap from '../flatMap'\n\nconst unique: () => mixed = pipe([\n  reduce(xs => x => ({ ...xs, [prop('errorType')(x)]: x }))({}),\n  values\n])\n\nconst mergeFailures: (Array<Failures>) => mixed = pipe([\n  map(prop('failures')),\n  flatMap,\n  unique\n])\n\nconst getValue: (Array<Failures>) => mixed = pipe([\n  head,\n  maybeToNullable,\n  prop('value')\n])\n\nexport default (errors: Array<Failures>): Left<Failures> =>\n  Left({\n    failures: mergeFailures(errors),\n    value: getValue(errors)\n  })\n"],"mappings":"AAsBA","sourceRoot":""}